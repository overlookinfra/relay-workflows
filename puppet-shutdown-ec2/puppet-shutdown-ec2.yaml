apiVersion: v1
summary: When sudoers file changes on my Puppet run, shut down the EC2 instance. 
description: >
  This workflow listens for a sudoers file change on a Puppet run and shuts down the EC2 instance in response
homepage: https://github.com/puppetlabs/relay-workflows/tree/master/puppet-shutdown-ec2
tags:
  - auto remediation
  - Incident response
  - compliance

parameters:
  # From the trigger
  host:
    description: The node that ran the Puppet agent
  resourceStatuses:
    description: The changed resources
  watchType:
    description: The resource type to watch for
    default: 'Sudo::Conf'
triggers:
  - name: puppet-report
    source:
      type: push
    binding:
      parameters:
        host: !Data host
        resourceStatuses: !Data resource_statuses
steps:
  - name: view-puppet-resources
    image: relaysh/core
    spec:
      resourceStatuses: !Parameter resourceStatuses
    input:
      - ni get | jq .resourceStatuses
  - name: detect-changes
    image: relaysh/core
    dependsOn: view-puppet-resources
    spec:
      resourceStatuses: !Parameter resourceStatuses
      watchType: !Parameter watchType
    input:
    - DETECTED_CHANGES=$(ni get | jq --arg type "$( ni get -p {.watchType} )" -r '.resourceStatuses | values | map(select(.corrective_change == true)) | map(.containment_path | (to_entries[] | select(.value | startswith("\($type)[")) | .key) as $key | .[:$key+1] | join("/")) | unique | join(",")')
    - 'echo "Detected changes, if any: ${DETECTED_CHANGES}"'
    - 'if [ x = x${DETECTED_CHANGES} ] ; then ni output set -k detectedChanges -v none; else ni output set -k detectedChanges -v "${DETECTED_CHANGES}" ; fi'
  - name: lookup-ec2-instance
    image: relaysh/aws-ec2-step-instances-describe
    when:
    - !Fn.notEquals [ !Output { from: detect-changes, name: detectedChanges }, none ]
    spec:
      aws: &aws
        connection: !Connection { type: aws, name: my-aws-account }
        region: !Secret awsRegion
      filters:
        private-dns-name: !Parameter host
  - name: output-instance-id
    image: relaysh/core:latest-python
    spec:
      instances: !Output { from: lookup-ec2-instance, name: instances }
    when:
    - !Fn.notEquals [ !Output { from: lookup-ec2-instance, name: instances }, ""]      
    input:
     - echo -e "from relay_sdk import Interface, Dynamic as D\nrelay=Interface()\nrelay.outputs.set('instanceID', relay.get(D.instances)[0]['InstanceId'])" | python
  - name: approval
    description: Wait for instance shutdown approval
    type: approval
    dependsOn:
    - output-instance-id
    - detect-changes
  - name: ec2-stop-instances
    image: relaysh/aws-ec2-step-instances-stop
    spec:
      aws: *aws
      instanceIDs:
      - !Output { from: output-instance-id, name: instanceID }
    dependsOn: approval
